public class SumOddRange {

	public static boolean isOdd(int number) {
	    if (number<0 || number %2==0) {
	        return false;
	    }  else {
	        return true;
	    }
	}    
	public static int sumOdd(int start, int end) {
		int total=-1;
		if (start>0 && end>0 && end>=start) {
	        total=0;
	    for (int i=start; i<=end; i++) {
	    	System.out.println(i);
	        if (isOdd(i)) {
	            total=total+i;
	            System.out.println(i + " new total is: "+total);
	        }
	    }
	    }
	    return total;
	}
	}
	   
     
     
     
     
     
public class FirstLastDigitSum {
    public static int sumFirstAndLastDigit(int number) {
    	if (number<0) {
            return -1;
        } 
        
        int lastDigit=number%10; //gets the remainder which is last digit
        while (number>9) {
            number=number/10; //keeps dividing until only first number remains
        }
        return lastDigit+number; //gets sum of first and last digit
    }
}









public class EvenDigitSum {
    public static int getEvenDigitSum(int number) {
        if (number<0) {
            return -1;
        } else {
        
        int total=0;
        String strNum = String.valueOf(number);
        
        for (int i=0; i<strNum.length(); i++) {
                       int digit=Integer.parseInt(strNum.substring(i, i+1));
        	if (digit%2==0) {
                total=total+digit;
            }
        }
        return total; 
    }
}
}








public class GreatestCommonDivisor {
    public static int getGreatestCommonDivisor(int first, int second) {
        if (first < 10 || second <10) {
            return -1;
        }
        int div=-1;
        for (int i=1; i<first || i<second; i++) {
            if(first%i==0 && second%i==0) {
                div=i;
            }  
        }
        return div;
    }
}





public class FactorPrinter {
    public static void printFactors(int number) {
        if (number<1) {
            System.out.println("Invalid Value");
        }
        for (int i=1; i<=number; i++) {
            if (number%i==0) {
                System.out.println(i);
            }
        }
    }
}



public class PerfectNumber {
    public static boolean isPerfectNumber(int number) {
        if (number <1 ) {
            return false;
        }
        int total=0;
        int i=1;
        while (i<number) {
            if (number%i==0) {
                total=total+i;
            }
            i=i+1;
        }
        System.out.println(total +" "+number);
        if(total==number) {
            return true;
        } else{
            return false;
        }
    }
}



public class LargestPrime {
    public static int getLargestPrime(int number) {
        if (number<2) return -1;
        ;
        
        for (int i=2; i<number; i++) {
            if(number%i==0) {
                number=number/i;
                i--;
            }
        }
        return number;
    }
}



public class SimpleCalculator {
    private double firstNumber;
    private double secondNumber;
    
    public SimpleCalculator() {
        this.firstNumber=firstNumber;
        this.secondNumber=secondNumber;
    }
    
    public double getFirstNumber() {
        return firstNumber;
    }
    public double getSecondNumber() {
        return secondNumber;
    }
    public void setFirstNumber (double firstNumber) {
        this.firstNumber=firstNumber;
    }
    public void setSecondNumber(double secondNumber) {
        this.secondNumber=secondNumber;
    }
    public double getAdditionResult() {
        return firstNumber+secondNumber;
    }
    public double getSubtractionResult(){
        return firstNumber-secondNumber;
    }
    public double getMultiplicationResult() {
        return firstNumber*secondNumber;
    }
    public double getDivisionResult() {
        if(secondNumber==0) {
            return 0;
        }
        return firstNumber/secondNumber;
    }
}
