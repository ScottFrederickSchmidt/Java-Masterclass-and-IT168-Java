package graphics;
//Scott Schmidt; IT 178

import java.awt.*;
import java.awt.event.*;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JSlider;
import javax.swing.WindowConstants;
import javax.sound.sampled.*;

public class Calculate extends JFrame implements ActionListener{
    public static void main(String[] args){
        new Calculate();
    }
    public Calculate(){
        this.setSize(600,600);
        this.setVisible(true);
    }
    
    //Part 1: Create a calculator program that contains two text boxes and a label and a button.
  	Frame f=new Frame();
  	Label l1=new Label("First Number");
  	Label l2=new Label("Second Number");
  	Label l3=new Label("Result");
  	Label l4=new Label("Convert");
  	
  	TextField t1=new TextField();
	TextField t2=new TextField();
	TextField t3=new TextField();
	TextField t4=new TextField();
	
	//Part 2: Create a list of operators (+ - * /) and then rewrite the code to control the button so that it calculates based on the choice selected in the list.
	Button b1=new Button("+");
	Button b2=new Button("-");
	Button b3=new Button("X");
	Button b4=new Button("/");
	Button b5=new Button("Cancel");
	
	//Create a slider which contains three values that translate to  the following choices: (binary, decimal, and hexadecimal).
	//When the button is pressed, it will report the answer in the form that was selected. 
	Button b6=new Button("Binary");
	Button b7=new Button("Decimal");
	Button b8=new Button("Hexadecimal");
	Button b9=new Button("Calculate");
	
    JSlider slider = new JSlider(JSlider.HORIZONTAL, 0, 2, 1);
	
    public void paint(Graphics gc) {                
        l1.setBounds(50,100,100,20);
		l2.setBounds(50,140,100,20);
		l3.setBounds(50,180,100,20);
		l4.setBounds(50,220,100,20);
		
		t1.setBounds(200,100,100,20);
		t2.setBounds(200,140,100,20);
		t3.setBounds(200,180,100,20);
		t4.setBounds(200,220,100,20);
		
		b1.setBounds(50,250,50,20);
		b2.setBounds(110,250,50,20);
		b3.setBounds(170,250,50,20);
		b4.setBounds(230,250,50,20);
		b5.setBounds(290,250,50,20);
		
		b6.setBounds(50,300,70,20);
		b7.setBounds(170,300,70,20);
		b8.setBounds(290,300,70,20);
		
		b9.setBounds(200,470,70,20);
		
		//Adding components to the frame
	    //f.addWindowListener((WindowListener) this);  
		f.add(l1);
		f.add(l2);
		f.add(l3);
		f.add(l4);
		
		f.add(t1);
		f.add(t2);
		f.add(t3);
		f.add(t4);
		
		f.add(b1);
		f.add(b2);
		f.add(b3);
		f.add(b4);
		f.add(b5);
		
		f.add(b6);
		f.add(b7);
		f.add(b8);
		f.add(b9);
		
		Label j1=new Label("Hexidecimal");
	  	Label j2=new Label("Decimal");
	  	Label j3=new Label("Binary");
	  	  
	  	j1.setBounds(300,420,100,20);
	  	j2.setBounds(200,420,100,20);
	  	j3.setBounds(80, 420,100,20);
		
	  	f.add(j1);
	  	f.add(j2);
	  	f.add(j3);

	    slider.setMajorTickSpacing(2);   
	    slider.setBounds(100, 450, 250, 20);
	    slider.setMajorTickSpacing(1);
	    slider.setPaintTicks(true);
	    f.add(slider);
	    
  
		b1.addActionListener((ActionListener) this);
		b2.addActionListener((ActionListener) this);
		b3.addActionListener((ActionListener) this);
		b4.addActionListener((ActionListener) this);
		b5.addActionListener((ActionListener) this);
		b6.addActionListener((ActionListener) this);
		b7.addActionListener((ActionListener) this);
		b8.addActionListener((ActionListener) this);
		b9.addActionListener((ActionListener) this);
		
	
	  	f.setLayout(null);
		f.setVisible(true);
		f.setSize(500,700);    
    }

    
    public void playSound(String audioFilePath) {
        File audioFile = new File(audioFilePath);

        try {
            AudioInputStream audioStream = AudioSystem.getAudioInputStream(audioFile);
            AudioFormat format = audioStream.getFormat();
            DataLine.Info info = new DataLine.Info(Clip.class, format);
            Clip audioClip = (Clip) AudioSystem.getLine(info);
            audioClip.addLineListener((LineListener) this);
            audioClip.open(audioStream);
            audioClip.start();
            audioClip.close();
        } catch (UnsupportedAudioFileException ex) {
            System.out.println("The specified audio file is not supported.");
            ex.printStackTrace();
        } catch (LineUnavailableException ex) {
            System.out.println("Audio line for playing back is unavailable.");
            ex.printStackTrace();
        } catch (IOException ex) {
            System.out.println("Error playing the audio file.");
            ex.printStackTrace();
        }    
       }
    
    public void windowClosing(WindowEvent e) {  
        f.dispose();  
    }  
    
    public void actionPerformed(ActionEvent e)
	{
    	//int n1, n2 =0;
		int n1=Integer.parseInt(t1.getText());
		int n2=Integer.parseInt(t2.getText());
		
		if(e.getSource()==b1)
		{
			t3.setText(String.valueOf(n1+n2));
		}
			
		if(e.getSource()==b2)
		{
			t3.setText(String.valueOf(n1-n2));
		}
		
		if(e.getSource()==b3)
		{
			t3.setText(String.valueOf(n1*n2));
		}
		
		if(e.getSource()==b4)
		{
			t3.setText(String.valueOf(n1/n2));
		}
		if(e.getSource()==b5)
		{
			System.exit(0);
			f.dispose(); //https://stackoverflow.com/questions/5281262/how-to-close-the-window-in-awt
			windowClosing(null);
		}
		if(e.getSource()==b6) {
			int int4=Integer.valueOf( t3.getText( ) );
			t4.setText(Integer.toBinaryString(int4) );
			playSound("C:\\Users\\scott\\OneDrive\\Desktop\\sounds\\bell");
		}
		if(e.getSource()==b7) {
			int decimal=Integer.valueOf( t3.getText( ) );
			t4.setText(String.valueOf(decimal ) );
			playSound("C:\\Users\\scott\\OneDrive\\Desktop\\sounds\\bark");
		}
		if(e.getSource()==b8) {
			int hex=Integer.valueOf( t3.getText( ) );
			//System.out.println(Integer.toHexString(hex)); 
			t4.setText(Integer.toHexString(hex) );
			playSound("C:\\Users\\scott\\OneDrive\\Desktop\\sounds\\rain");
		}
		if(e.getSource()==b9) {
			int number=Integer.valueOf( t3.getText( ) );
			int position= slider.getValue();
			if (position==0) {
				int int4=Integer.valueOf( t3.getText( ) );
				t4.setText(Integer.toBinaryString(int4) );
				playSound("C:\\Users\\scott\\OneDrive\\Desktop\\sounds\\bell");
			} if(position==1) {
				int decimal=Integer.valueOf( t3.getText( ) );
				t4.setText(String.valueOf(decimal ) );
				playSound("C:\\Users\\scott\\OneDrive\\Desktop\\sounds\\bark");
			} if (position==2) {
				int hex=Integer.valueOf( t3.getText( ) );
				//System.out.println(Integer.toHexString(hex)); 
				t4.setText(Integer.toHexString(hex) );
				playSound("C:\\Users\\scott\\OneDrive\\Desktop\\sounds\\rain");
			}
		}
	}	
}

//Part 3: Add a sound to the number type choice, so that a different sound is played for each number system chosen.
// if the user changes to binary, a sound will play, but if they change to hexadecimal, a different sound will play. 
